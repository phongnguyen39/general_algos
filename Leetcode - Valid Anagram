// two strings, s & t
// determine if t is an anagram of strings
// anagram means that letters in a word can be rearranged to form another word
// bat => tab, atb, bta, abt 

// check to see if s.length == to t.length
// create a dictionary of s.length with occurences
// use a for loop for t string, check if there is a match in key and occurences

// output true or false

var isAnagram = function(s, t) {
    let dict = {};
  if (s.length == t.length) {

    for (let i = 0; i < s.length; i++) {
      if (!dict[s[i]]) {
        dict[s[i]] = 1
      } else {
        dict[s[i]]++
      }
    }


    for (let j = 0; j < t.length; j++) {
      if (dict[t[j]] === 0) {
        return false;
      } else if (dict[t[j]]) {
        dict[t[j]]--
        
      }
    }

    let check = Object.values(dict)
    let output = 0;
    
    for(let x = 0; x < check.length; x++){
        output += check[x]
    }
    
    if(output == 0){
      return true;
    }
  }
  
    return false;
  
}
  
// isAnagram('anagram', 'nagaram')
isAnagram('a', 'b')
