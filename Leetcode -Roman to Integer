// Roman Numerals are written from largest to smallest
// XXVII represents 10 + 10 + 5 + 1 + 1

// Except for these instances:
// I can be placed before V & X to make 4 & 9
// X can be placed before L & C 
// C can be placed before D & M

// num range willl be from 1 to 3999

// convert each char to integer then compare adjacents to form final num

var romanToInt = function(s) {
  if (!s) {
    return false;
  }

  let sUp = s.toUpperCase();
  let integer = 0;
  
  let dict = {
    'I': 1,
    'V': 5,
    'X': 10,
    'L': 50,
    'C': 100,
    'D': 500,
    'M': 1000
  }
  // console.log(dict);

  let dictExcept = {
    'IV': 4,
    'IX': 9,
    'XL': 40,
    'XC': 90,
    'CD': 400,
    'CM': 900
  }

  for (let i = 0; i < sUp.length; i++) {
    console.log(integer, s[i], s[i+1])
    let romanPair = s[i] + s[i+1];

    if(dictExcept[romanPair]) {
      console.log('xxx')
      integer+=dictExcept[romanPair];
      i++;
      continue;
    }
    integer+=dict[s[i]];
  }
  console.log(integer)
  return integer;
};
// romanToInt('III'); // 3
// romanToInt('XXVII'); // 27
// romanToInt('IV') // 4 - special
// romanToInt('IX') // 9 - special
// romanToInt( "MCMXCIV") // 1994 -special
romanToInt("MCDLXXVI") // 1476 expected, got 1576
// romanToInt('LVIII') // 58
