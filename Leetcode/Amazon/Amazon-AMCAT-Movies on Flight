// one flight, two movies

// movieDurations = [1, 2, 3,4 ] // all integers of movie movieDurations
// d = int;  duration of flight in minutes
// (d-30min) 

// Objective pick two of the longest movie durations that are less than total flight time

//inputs
const movie_duration = [90, 85, 75, 60, 120, 150, 125];
const d = 250; 

//output is an array of the two movies
// [90,125]  // 215 minutes total, which is less than d;

function moviesFlight(mDurations,fDuration){
  let maxDuration = 0;
  let sum = 0;
  let output = [];

  // brute force approach
  // we going to sum each duration with the others
  // we going to set a var called maxDuration if it is <= d.  
  
  for(let i = 0; i < movie_duration.length -1; i++){
    for(let j = i + 1; j < movie_duration.length; j++){
      // add i & j elements together
      // if sum > maxDuration && sum < d: maxDuration = sum;
      // need a way to retrieve two elements sums;
      sum = movie_duration[i] + movie_duration[j];
      if( sum > maxDuration && sum < d-30){
        maxDuration = sum;
        output.splice(0,2,movie_duration[i], movie_duration[j])
      }
    }
  }
  console.log(maxDuration);
  console.log(output)
  return;
}
moviesFlight(movie_duration,d);


