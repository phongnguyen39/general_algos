// 10 -> 5 -> 16

// BUIDLING LINKED LIST WITHOUT CLASS CONSTRUCTORS
// let myLinkedList = {
//   head: {
//     value: 10,
//     next: {
//       value: 5,
//       next: {
//         value: 16,
//         next: null
//       }
//     }
//   }
// }

// console.log(myLinkedList)

// BUIDLING LINKED LIST WITH CLASS CONSTRUCTORS
class Node{
  constructor(value){
    this.value = value,
    this.next = null
  }
}


class LinkedList{
  constructor(value){
    this.head = {
      value: value,
      next: null
    }
    this.tail = this.head;
    this.length = 1; // this is optional
  }

  append(value){
    
    // head obj already created.  We need to append the next new node
    // so we need to create a new node then have the head point to it

    const newNode = new Node(value);   // below is another option
    // const newNode = {
    //   value: value,
    //   next: null
    // }

    this.tail.next = newNode;
    this.tail = newNode;
    this.length++;

    // Failed append approach, this is adding to the head instead of the tail.   This creates shifting issues
    // if(this.head.next == null){
    //   this.head.next = value;
    //   this.length++;
    // }
    // // else {
    //   while(this.next != null){ ... }}
    return; // return allows for chaining of methods
  }

  prepend(value){
    // we want to create a new node
    // then add this new node to the front of the linked list 
    // first identify the head
    // point the new node next to the head
    // then make the new node the head

    const newNode = new Node(value);   // below is another option
    // const newNode = {
    //   value: value,
    //   next: null
    // }

    newNode.next = this.head;  // read this.  newNOde is pointing to this.head (from left to right)
    this.head = newNode;  // read this.  newNode is now the head (from right to left)
    this.length++;
    return;  // return allows for chaining of methods
  }
}

const myLinkedList = new LinkedList(10)
console.log('Before appends \n', myLinkedList)

myLinkedList.append(5);
myLinkedList.append(16);
myLinkedList.prepend(1);

console.log(myLinkedList)
