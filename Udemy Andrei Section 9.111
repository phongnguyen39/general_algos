// Stack Implementation Using Arrays

class Stack{
  constructor(){
    this.stack = [];
  }

  lookup(value){
    for(let i = 0; i < this.stack.length; i++){
      if(this.stack[i] == value){
        console.log("Lookup found: ", value, 'Index: ', i)
      }
      else {
        console.log("Lookup value not found")
        return false;
      }
    }
  }

  peek(){
    if(this.stack.length == 0){
      console.log('Empty stack array');
      return false;
    }
    console.log('Peek: ',this.stack[this.stack.length-1])
    return this.stack[this.stack.length-1];
  }

  isEmpty(){
    if(this.stack.length == 0){
      console.log('Empty stack array');
      return true;
    }
  }

  push(value){
    this.stack.push(value);
    return this.stack;
  }

  pop(){
    this.stack.pop();
    return this.stack;
  }

}

const newStack = new Stack();
newStack.isEmpty();
console.log(newStack);
newStack.push('youtube');
newStack.push('udemy');
newStack.push('google');
newStack.lookup('youtube')
newStack.peek();
console.log(newStack);
newStack.pop();
newStack.peek();
console.log(newStack);



// myStack[bottom, x, y, z, top]

